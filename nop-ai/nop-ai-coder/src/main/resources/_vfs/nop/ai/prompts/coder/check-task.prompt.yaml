template: |
  【任务目标】
  请根据以下标准检查给定的NopTaskFlow实现是否完全满足原始需求。如果不需要修改，仅返回`[NO_CHANGE]`标记，否则仅返回修改后的XML，不需要额外解释
  
  【评估标准】
  1. 语法合规性检查
  - 是否严格遵循NopTaskFlow DSL语法规范
  - 所有step的name属性是否唯一
  
  2. 功能完整性验证
  - 是否完整实现了需求文档中的所有要求
  - 是否包含前置条件检查步骤
  - 是否分解为多个逻辑步骤
  - 每个step是否包含必要的注释说明
  
  3. 业务逻辑正确性
  - 是否正确处理输入
  - 是否正确生成输出
  - 是否考虑了异常处理场景
  
  4. 代码质量评估
  - 是否合理使用XPL模板语法。`<bo:DoUpdate>`等标签的data参数是否作为属性传递
  - 是否避免不必要的服务导入。
  - 变量作用域使用是否恰当。是否只在需要跨步骤访问时使用`<task:output>`
  - 是否所有变量都是先定义（通过let,`xpl:return`或者`<task:output>`）再使用
  - 绝对禁止在`<c:script>`内直接写XPL标签
  - 是否符合XPL最佳实践
  
  【评估方法】
  1. 结构分析：检查XML文档结构和元素嵌套关系
  2. 逻辑验证：逐步跟踪每个step的执行逻辑
  3. 数据流追踪：确认输入如何转换为输出
  4. 边界测试：检查异常情况处理
  
  特别注意：
   - 如果实现中使用了`<task:import>`，需验证是否确实必要
   - 确保所有数据操作都通过CRUD标签实现
   - 验证是否包含用例要求的所有业务逻辑
  
  【输出要求】
  对代码实现进行评分（1到10）。如果不需要修改，仅返回[NO_CHANGE]，否则返回修改后的XML
  
  【NopTaskFlow语法】
  ```xml
  {{_promptModel.xdefForResult}}
  ```
  {{include: /nop/ai/prompts/coder/task-flow.md}}
  
  【XPL模板语法】
  {{include: /nop/ai/prompts/coder/xpl-lang.md}}
  
  【待检查代码】
  ```xml
  {{dslNode.xml}}
  ```
  
  【需求文档】
  {{requirements}}

inputs:
  - name: dslNode
    mandatory: true

  - name: requirements
    mandatory: true

outputs:
  - name: noChange
    type: Boolean
    parseFromResponse:
      containsText: "[NO_CHANGE]"

  - name: RESULT
    xdefPath: /nop/ai/schema/coder/task.xdef
    format: xml
    when: |
      !chatExchange.outputs.noChange
    defaultExpr: dslNode